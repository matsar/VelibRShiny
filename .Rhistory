shiny::runApp()
library(shiny)
library(dplyr)
require(plyr)
require(stringr)
library(lubridate)
require(rgbif) #il faut passer par le zip!
library(ggmap)
require(dismo)
require(rgdal)
require(leaflet)
install.packages(c("dplR", "stringr", "lubridate", "rgbif", "ggmap", "dismo", "rgal", "leaflet"))
library(shiny)
library(dplyr)
require(plyr)
require(stringr)
library(lubridate)
require(rgbif) #il faut passer par le zip!
library(ggmap)
require(dismo)
require(rgdal)
require(leaflet)
install.packages("dplyr")
library(dplyr)
install.packages("rgdal")
library(shiny)
library(dplyr)
require(plyr)
require(stringr)
library(lubridate)
require(rgbif) #il faut passer par le zip!
library(ggmap)
require(dismo)
require(rgdal)
require(leaflet)
source("fonctions.R") # nos fonctions
runApp()
shiny::runApp()
shiny::runApp()
library(XML)
runApp()
shiny::runApp()
library(shiny)
library(dplyr)
require(plyr)
require(stringr)
library(lubridate)
require(rgbif) #il faut passer par le zip!
library(ggmap)
require(dismo)
require(rgdal)
require(leaflet)
library(XML) # shinyapps le réclame
runApp()
runApp()
runApp()
autolibs<-read.csv("data/stations_et_espaces_autolib_de_la_metropole_parisienne.csv", sep=";")
coordAuto<-str_split_fixed(autolibs$Coordonnées.geo, pattern=",", n=2)%>%as.matrix%>%apply(as.numeric, MARGIN=2)
autolibs2<-data.frame(autolibs, latitude=coordAuto[,1], longitude=coordAuto[,2] )
colnames(autolibs)[6]<-Coordonnees.geo
colnames(autolibs)[6] <- "Coordonnees.geo"
coordAuto<-str_split_fixed(autolibs$Coordonnees.geo, pattern=",", n=2)%>%as.matrix%>%apply(as.numeric, MARGIN=2)
autolibs2<-data.frame(autolibs, latitude=coordAuto[,1], longitude=coordAuto[,2] )
save(autolibs2, file="autolibsFormate.RData")
load("data/autolibsFormate.RData") # --> charge autolibs2
load("data/autolibsFormate.RData") # --> charge autolibs2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
